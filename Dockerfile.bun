# Alternative Bun-based Dockerfile 
# Use this if you want to try Bun instead of Node.js

# Build stage
FROM oven/bun:1 AS base

# Set working directory
WORKDIR /app

# Install system dependencies required for sharp and other native modules
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    libvips-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package.json ./
COPY prisma ./prisma/

# Install dependencies (without frozen lockfile to allow regeneration)
RUN bun install

# Copy source code
COPY . .

# Generate Prisma client
RUN bunx prisma generate

# Build the application
RUN bun run build && bun run build.server

# Production stage
FROM oven/bun:1 AS production

# Install system dependencies for runtime including build tools for native modules
RUN apt-get update && apt-get install -y \
    libvips42 \
    python3 \
    make \
    g++ \
    wget \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Create uploads directory with proper permissions
RUN mkdir -p /app/uploads && chmod 755 /app/uploads

# Copy package files and install production dependencies only
COPY package.json ./
COPY prisma ./prisma/

# Install production dependencies (without frozen lockfile)
RUN bun install --production

# Generate Prisma client
RUN bunx prisma generate

# Copy built application from build stage
COPY --from=base /app/server ./server
COPY --from=base /app/dist ./dist
COPY --from=base /app/public ./public

# Copy other necessary files
COPY --from=base /app/prisma ./prisma

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV UPLOAD_DIR=/app/uploads

# Create a non-root user
RUN groupadd -g 1001 nodejs
RUN useradd -r -u 1001 -g nodejs nextjs

# Change ownership of the app directory to the nodejs user
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose the port the app runs on
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Start the application
CMD ["node", "server/entry.node-server.js"]
